# -*- coding: utf-8 -*-
"""Digital Image Processing

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1voaQIW4Gh5wCqFdL6KttdpeNoAkdxMdp
"""

import matplotlib.pyplot as plt
from PIL import Image
import numpy as np
import cv2 as cv

pil_img = Image.open('/content/tae.jpg')



gb = np.array(pil_img)
plt.imshow(gb)

A= gb

id(A)==id(gb)

gb.shape

plt.imshow(gb[200:650,150:550,:])

gb[200:650,150:550,:] = 0

plt.imshow(gb)

gb[:,:,0]

plt.imshow(gb[:,:,0])

flipped_img = pil_img.transpose(Image.FLIP_TOP_BOTTOM)

flipped_img

flipped_img = pil_img.transpose(Image.FLIP_LEFT_RIGHT)

flipped_img

from PIL import ImageOps
img_gray = ImageOps.grayscale(pil_img)
img_gray

flip = ImageOps.flip(pil_img)
flip

flip = ImageOps.flip(pil_img)
flip

width = 500
height = 500
img = pil_img.resize((width, height), Image.BILINEAR)
img

theta = 135
img_rotate = pil_img.rotate(theta)
img_rotate

import cv2
cols,rows,_ = gb.shape
theta = 30
M = cv2.getRotationMatrix2D(center=(cols//2-1, rows//2-1), angle = theta, scale= 1)
img = cv2.warpAffine(gb,M,(cols,rows))
plt.imshow(img)

img_gray = cv2.imread("/content/tae.jpg", cv2.IMREAD_GRAYSCALE)
depth = cv2.CV_64F
grad_x = cv2.Sobel(src=img_gray, ddepth=depth, dx=1, dy=0, ksize=3)
grad_y = cv2.Sobel(src=img_gray, ddepth=depth, dx=0, dy=1, ksize=3)

plt.imshow(grad_x)

plt.imshow(grad_y)

abs_grad_x = cv2.convertScaleAbs(grad_x)
plt.imshow(abs_grad_x)

abs_grad_y = cv2.convertScaleAbs(grad_y)
plt.imshow(abs_grad_y)

grad= cv2.addWeighted(abs_grad_x,0.5, abs_grad_y,0.5,0)
plt.imshow(grad)

